@model mvcBLOG.Models.BlogPost


<!-- Page Header -->
<!-- Set your background image for this header on the line below. -->
@{
    var bgimage = "../../img/home-bg.jpg";
}
@if (Model.MediaUrl != null)
{
    bgimage = Model.MediaUrl;
}
<header class="intro-header" style="background-image:url('@bgimage')">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <div class="post-heading">
                    <h1>@Html.Raw(Model.Title)</h1>
                    <h2 class="subheading">@Html.Raw(Model.Abstract)</h2>
                    <span class="meta">Posted by Adam on @Html.Raw(Model.Created.ToString("MM/dd/yyyy"))</span>
                    @if (Model.Updated != null)
                    {
                        <span class="meta">Updated on @Html.Raw(Model.Updated.Value.ToString("MM/dd/yyyy"))</span>
                    }

                </div>
            </div>
        </div>
    </div>
</header>

<!-- Post Content -->
<article>
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <p> @Html.Raw(Model.Body)</p>
            </div>
        </div>
    </div>
</article>

<h2 style="display: flex; justify-content: center;">Comments</h2>
@if (User.Identity.IsAuthenticated)
{
    using (Html.BeginForm("Create", "Comments", FormMethod.Post, new { @class = "Form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Slug)

        <div style="display: flex; justify-content: center; flex-direction:column; align-items: center" class="form-group">
            <h3>@Html.Label("Add Comment", htmlAttributes: new { @class = "control-label" })</h3>
            <div style="display: flex; align-items: center">
                @Html.TextArea("CommentBody", new { @class = "comment", placeholder = "Add a comment", id = "txtarea" })


            </div>
            <div style="display: flex; justify-content: flex-end; width: 100vh">
                <button class="btn btn-default" id="cancel">Cancel</button>
                <button class="btn btn-primary" type="submit" value="submit">add</button>
            </div>
            <br />

        </div>
    }
}
<div class="container">
    @foreach (var comment in Model.Comments.OrderByDescending(B => B.Created))
    {
        <div class="row">
            <div class="col-md-12" style="display: flex">
                <div style="margin: 5px">@comment.Author.FirstName</div>
                @{
                    TimeSpan age = DateTimeOffset.Now.Subtract(comment.Created);
                    var str = age.ToString("%d");
                    if (str == "0")
                    {
                        str = "Posted today";
                    }
                    else
                    {
                        str = str + " day(s) ago";
                    }
                }
                <div style="margin: 5px">@str</div>
            </div>
        </div>
        <div style="margin-left: 10px" class="row">
            <div class="col-md-12">
                <p>@comment.Body</p>
            </div>
        </div>
        <hr />
    }
</div>
<hr>

<style>
    .comment {
        resize: none;
        overflow: visible;
        width: 100vh;
        height: 10vh
    }
</style>


@section scripts{
    <script>
        $(".comment").autogrow();
        $("#cancel").click(() => {
            $("#txtarea").val("")
        })
    </script>}

